#!/bin/bash
set -e

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ Kubernetes

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ AI Creative Generator –≤ Kubernetes"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ kubectl
if ! command -v kubectl &> /dev/null; then
    echo "‚ùå kubectl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ yc
if ! command -v yc &> /dev/null; then
    echo "‚ùå yc CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
NAMESPACE="ai-creatives"
REGISTRY_ID=${YC_REGISTRY_ID:-""}

if [ -z "$REGISTRY_ID" ]; then
    echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é YC_REGISTRY_ID"
    exit 1
fi

echo "üì¶ Registry ID: $REGISTRY_ID"

# –°–æ–∑–¥–∞–Ω–∏–µ namespace
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ namespace..."
kubectl apply -f k8s/namespace.yaml

# –°–æ–∑–¥–∞–Ω–∏–µ secrets (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã)
if ! kubectl get secret ai-creatives-secrets -n $NAMESPACE &> /dev/null; then
    echo "üîê –°–æ–∑–¥–∞–Ω–∏–µ secrets..."
    
    SECRET_KEY=$(python3 -c "import secrets; print(secrets.token_urlsafe(32))")
    POSTGRES_PASSWORD=$(python3 -c "import secrets; print(secrets.token_urlsafe(16))")
    
    kubectl create secret generic ai-creatives-secrets \
      --from-literal=POSTGRES_PASSWORD="$POSTGRES_PASSWORD" \
      --from-literal=DATABASE_URL="postgresql://postgres:$POSTGRES_PASSWORD@postgres:5432/ai_creatives" \
      --from-literal=SECRET_KEY="$SECRET_KEY" \
      --from-literal=ALGORITHM="HS256" \
      --from-literal=ACCESS_TOKEN_EXPIRE_MINUTES="30" \
      --from-literal=YUKASSA_SHOP_ID="" \
      --from-literal=YUKASSA_SECRET_KEY="" \
      -n $NAMESPACE
    
    echo "‚úÖ Secrets —Å–æ–∑–¥–∞–Ω—ã"
else
    echo "‚úÖ Secrets —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ ConfigMap
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ ConfigMap..."
kubectl apply -f k8s/secrets.yaml

# –ó–∞–º–µ–Ω–∞ REGISTRY_ID –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞—Ö
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤..."
sed -i.bak "s/REGISTRY_ID/$REGISTRY_ID/g" k8s/backend.yaml
sed -i.bak "s/REGISTRY_ID/$REGISTRY_ID/g" k8s/frontend.yaml

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PostgreSQL
echo "üíæ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PostgreSQL..."
kubectl apply -f k8s/postgres.yaml
kubectl wait --for=condition=ready pod -l app=postgres -n $NAMESPACE --timeout=300s

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
cat <<EOF | kubectl apply -f -
apiVersion: batch/v1
kind: Job
metadata:
  name: db-init-$(date +%s)
  namespace: $NAMESPACE
spec:
  template:
    spec:
      containers:
      - name: init
        image: cr.yandex/$REGISTRY_ID/ai-creatives-backend:latest
        command: ["python", "init_db.py"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ai-creatives-secrets
              key: DATABASE_URL
      restartPolicy: OnFailure
  backoffLimit: 3
EOF

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Backend
echo "‚öôÔ∏è –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Backend..."
kubectl apply -f k8s/backend.yaml
kubectl rollout status deployment/backend -n $NAMESPACE --timeout=300s

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Frontend
echo "üé® –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Frontend..."
kubectl apply -f k8s/frontend.yaml
kubectl rollout status deployment/frontend -n $NAMESPACE --timeout=300s

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Ingress
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Ingress..."
kubectl apply -f k8s/ingress.yaml

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Network Policies
echo "üîí –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Network Policies..."
kubectl apply -f k8s/network-policies.yaml

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –±—ç–∫–∞–ø–æ–≤
echo "üíæ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –±—ç–∫–∞–ø–æ–≤..."
kubectl apply -f k8s/backup-cronjob.yaml

# –í—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞
echo ""
echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–æ–≤:"
kubectl get pods -n $NAMESPACE
echo ""
echo "üåê –°–µ—Ä–≤–∏—Å—ã:"
kubectl get services -n $NAMESPACE
echo ""
echo "üîó Ingress:"
kubectl get ingress -n $NAMESPACE
echo ""
echo "üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ backend:"
echo "   kubectl logs -l app=backend -n $NAMESPACE -f"
echo ""
echo "üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ frontend:"
echo "   kubectl logs -l app=frontend -n $NAMESPACE -f"
echo ""

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
mv k8s/backend.yaml.bak k8s/backend.yaml
mv k8s/frontend.yaml.bak k8s/frontend.yaml

